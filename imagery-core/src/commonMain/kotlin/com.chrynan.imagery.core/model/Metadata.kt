package com.chrynan.imagery.core.model

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * Information about the [Image]. All of the properties are optional and may be null.
 *
 * This information is adapted from the Exif interface, though it could be defined and associated
 * to the [Image] by any means.
 *
 * @see [Exif Tags](https://www.exiftool.org/TagNames/EXIF.html)
 * @see [Android ExifInterface](https://developer.android.com/reference/kotlin/android/media/ExifInterface)
 */
@Serializable
data class Metadata(
    @SerialName(value = "aperture") val aperture: Float? = null,
    @SerialName(value = "artist") val artist: String? = null,
    @SerialName(value = "bits_per_sample") val bitsPerSample: Int? = null,
    @SerialName(value = "brightness_value") val brightnessValue: Float? = null,
    @SerialName(value = "cfa_pattern") val cfaPattern: String? = null,
    @SerialName(value = "color_space") val colorSpace: Int? = null,
    @SerialName(value = "components_configuration") val componentsConfiguration: String? = null,
    @SerialName(value = "compressed_bits_per_pixel") val compressedBitsPerPixel: Float? = null,
    @SerialName(value = "compression") val compression: Int? = null,
    @SerialName(value = "contrast") val contrast: Int? = null,
    @SerialName(value = "copyright") val copyright: String? = null,
    @SerialName(value = "custom_rendered") val customRendered: Int? = null,
    @SerialName(value = "datetime") val datetime: String? = null,
    @SerialName(value = "datetime_digitized") val datetimeDigitized: String? = null,
    @SerialName(value = "datetime_original") val datetimeOriginal: String? = null,
    @SerialName(value = "default_crop_size") val defaultCropSize: Int? = null,
    @SerialName(value = "device_setting_description") val deviceSettingDescription: String? = null,
    @SerialName(value = "digital_zoom_ratio") val digitalZoomRatio: Double? = null,
    @SerialName(value = "dng_version") val dngVersion: Int? = null,
    @SerialName(value = "exif_version") val exifVersion: String? = null,
    @SerialName(value = "exposure_bias_value") val exposureBiasValue: Double? = null,
    @SerialName(value = "exposure_index") val exposureIndex: Float? = null,
    @SerialName(value = "exposure_mode") val exposureMode: Int? = null,
    @SerialName(value = "exposure_program") val exposureProgram: Int? = null,
    @SerialName(value = "exposure_time") val exposureTime: Double? = null,
    @SerialName(value = "file_source") val fileSource: String? = null,
    @SerialName(value = "flash") val flash: Int? = null,
    @SerialName(value = "flashpix_version") val flashpixVersion: String? = null,
    @SerialName(value = "flash_energy") val flashEnergy: Float? = null,
    @SerialName(value = "focal_length") val focalLength: Float? = null,
    @SerialName(value = "focal_length_in_35mm_film") val focalLengthIn35mmFilm: Int? = null,
    @SerialName(value = "focal_plane_resolution_unit") val focalPlaneResolutionUnit: Int? = null,
    @SerialName(value = "focal_plane_x_resolution") val focalPlaneXResolution: Float? = null,
    @SerialName(value = "focal_plane_y_resolution") val focalPlaneYResolution: Float? = null,
    @SerialName(value = "f_number") val fNumber: Double? = null,
    @SerialName(value = "gain_control") val gainControl: Int? = null,
    @SerialName(value = "gps_altitude") val gpsAltitude: String? = null,
    @SerialName(value = "gps_area_information") val gpsAreaInformation: String? = null,
    @SerialName(value = "gps_datestamp") val gpsDatestamp: String? = null,
    @SerialName(value = "gps_dest_bearing") val gpsDestBearing: Float? = null,
    @SerialName(value = "gps_dest_distance") val gpsDestDistance: Float? = null,
    @SerialName(value = "gps_dest_latitude") val gpsDestLatitude: Float? = null,
    @SerialName(value = "gps_dest_longitude") val gpsDestLongitude: Float? = null,
    @SerialName(value = "gps_differential") val gpsDifferential: Int? = null,
    @SerialName(value = "gps_dop") val gpsDop: Float? = null,
    @SerialName(value = "gps_img_direction") val gpsImageDirection: Float? = null,
    @SerialName(value = "gps_latitude") val gpsLatitude: Float? = null,
    @SerialName(value = "gps_longitude") val gpsLongitude: Float? = null,
    @SerialName(value = "gps_map_datum") val gpsMapDatum: String? = null,
    @SerialName(value = "gps_measure_mode") val gpsMeasureMode: String? = null,
    @SerialName(value = "gps_processing_method") val gpsProcessingMethod: String? = null,
    @SerialName(value = "gps_satellites") val gpsSatellites: String? = null,
    @SerialName(value = "gps_speed") val gpsSpeed: Float? = null,
    @SerialName(value = "gps_status") val gpsStatus: String? = null,
    @SerialName(value = "gps_timestamp") val gpsTimestamp: String? = null,
    @SerialName(value = "gps_track") val gpsTrack: Float? = null,
    @SerialName(value = "gps_version_id") val gpsVersionId: String? = null,
    @SerialName(value = "image_description") val imageDescription: String? = null,
    @SerialName(value = "image_length") val imageLength: Int? = null,
    @SerialName(value = "image_unique_id") val imageUniqueId: String? = null,
    @SerialName(value = "image_width") val imageWidth: Int? = null,
    @SerialName(value = "interoperability_index") val interoperabilityIndex: Int? = null,
    @SerialName(value = "jpeg_interchange_format") val jpegInterchangeFormat: Int? = null,
    @SerialName(value = "jpeg_interchange_format_length") val jpegInterchangeFormatLength: Int? = null,
    @SerialName(value = "light_source") val lightSource: Int? = null,
    @SerialName(value = "make") val make: String? = null,
    @SerialName(value = "maker_note") val makerNote: String? = null,
    @SerialName(value = "max_aperture_value") val maxApertureValue: Float? = null,
    @SerialName(value = "metering_mode") val meteringMode: Int? = null,
    @SerialName(value = "model") val model: String? = null,
    @SerialName(value = "new_subfile_type") val newSubfileType: Int? = null,
    @SerialName(value = "oecf") val oecf: String? = null,
    @SerialName(value = "offset_time") val offsetTime: String? = null,
    @SerialName(value = "offset_time_digitized") val offsetTimeDigitized: String? = null,
    @SerialName(value = "offset_time_original") val offsetTimeOriginal: String? = null,
    @SerialName(value = "orf_aspect_frame") val orfAspectFrame: Int? = null,
    @SerialName(value = "orf_preview_image_length") val orfPreviewImageLength: Int? = null,
    @SerialName(value = "orf_preview_image_start") val orfPreviewImageStart: Int? = null,
    @SerialName(value = "orf_thumbnail_image") val orfThumbnailImage: String? = null,
    @SerialName(value = "orientation") val orientation: Int? = null,
    @SerialName(value = "photometric_interpretation") val photometricInterpretation: Int? = null,
    @SerialName(value = "photographic_sensitivity") val photographicSensitivity: Int? = null,
    @SerialName(value = "pixel_x_dimension") val pixelXDimension: Int? = null,
    @SerialName(value = "pixel_y_dimension") val pixelYDimension: Int? = null,
    @SerialName(value = "planar_configuration") val planarConfiguration: Int? = null,
    @SerialName(value = "primary_chromaticities") val primaryChromaticities: Float? = null,
    @SerialName(value = "reference_black_white") val referenceBlackWhite: Float? = null,
    @SerialName(value = "related_sound_file") val relatedSoundFile: String? = null,
    @SerialName(value = "resolution_unit") val resolutionUnit: Int? = null,
    @SerialName(value = "rows_per_strip") val rowsPerStrip: Int? = null,
    @SerialName(value = "rw2_iso") val rw2Iso: Int? = null,
    @SerialName(value = "rw2_jpeg_from_raw") val rw2JpegFromRaw: String? = null,
    @SerialName(value = "rw2_sensor_bottom_border") val rw2SensorBottomBorder: Int? = null,
    @SerialName(value = "rw2_sensor_top_border") val rw2SensorTopBorder: Int? = null,
    @SerialName(value = "rw2_sensor_left_border") val rw2SensorLeftBorder: Int? = null,
    @SerialName(value = "rw2_sensor_right_border") val rw2SensorRightBorder: Int? = null,
    @SerialName(value = "samples_per_pixel") val samplesPerPixel: Int? = null,
    @SerialName(value = "saturation") val saturation: Int? = null,
    @SerialName(value = "scene_capture_type") val sceneCaptureType: Int? = null,
    @SerialName(value = "scene_type") val sceneType: String? = null,
    @SerialName(value = "sensing_method") val sensingMethod: Int? = null,
    @SerialName(value = "sharpness") val sharpness: Int? = null,
    @SerialName(value = "shutter_speed_value") val shutterSpeedValue: Float? = null,
    @SerialName(value = "software") val software: String? = null,
    @SerialName(value = "spatial_frequency_response") val spatialFrequencyResponse: String? = null,
    @SerialName(value = "spectral_sensitivity") val spectralSensitivity: String? = null,
    @SerialName(value = "strip_byte_counts") val stripByteCounts: Int? = null,
    @SerialName(value = "strip_offsets") val stripOffsets: Int? = null,
    @SerialName(value = "subfile_type") val subfileType: Int? = null,
    @SerialName(value = "subject_area") val subjectArea: Int? = null,
    @SerialName(value = "subject_distance") val subjectDistance: Double? = null,
    @SerialName(value = "subject_distance_range") val subjectDistanceRange: Int? = null,
    @SerialName(value = "subject_location") val subjectLocation: Int? = null,
    @SerialName(value = "subsec_time") val subsecTime: String? = null,
    @SerialName(value = "subsec_time_digitized") val subsecTimeDigitized: String? = null,
    @SerialName(value = "subsec_time_original") val subsecTimeOriginal: String? = null,
    @SerialName(value = "thumbnail_image_length") val thumbnailImageLength: Int? = null,
    @SerialName(value = "thumbnail_image_width") val thumbnailImageWidth: Int? = null,
    @SerialName(value = "transfer_function") val transferFunction: Int? = null,
    @SerialName(value = "user_comment") val userComment: String? = null,
    @SerialName(value = "white_balance") val whiteBalance: Int? = null,
    @SerialName(value = "white_point") val whitePoint: Float? = null,
    @SerialName(value = "x_resolution") val xResolution: Float? = null,
    @SerialName(value = "y_cb_cr_coefficients") val yCbCrCoefficients: Float? = null,
    @SerialName(value = "y_cb_cr_positioning") val yCbCrPositioning: Int? = null,
    @SerialName(value = "y_cb_cr_sampling") val yCbCrSampling: Int? = null,
    @SerialName(value = "y_resolution") val yResolution: Int? = null
) {

    companion object
}
